{"ast":null,"code":"var _jsxFileName = \"/home/sammyp/Development/code/phase-3-project-front-end/src/components/AddArtist.js\",\n  _s = $RefreshSig$();\nimport { type } from \"@testing-library/user-event/dist/type\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddArtist(_ref) {\n  _s();\n  let {\n    artistData,\n    setArtistData\n  } = _ref;\n  const [albumInput, setAlbumInput] = useState('');\n  const [artistNameInput, setArtistNameInput] = useState('');\n  const [yearReleaseInput, setYearReleaseInput] = useState('');\n  const [albumCoverImageInput, setAlbumCoverImageInput] = useState('');\n  const [listSong, setListSong] = useState('');\n  const handleSubmit = se => {\n    se.preventDefault();\n    let newAlbum = {\n      album_name: albumInput,\n      artist_name: artistNameInput,\n      release_year: yearReleaseInput,\n      album_cover: albumCoverImageInput,\n      song_cover: listSong\n    };\n    fetch('http://localhost:9292/newalbums', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newAlbum)\n    }).then(res => res.json()).then(data => setArtistData([...artistData, data]));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"New Album\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        class: true,\n        placeholder: \"Name Of Album\",\n        type: \"text\",\n        value: albumInput,\n        onChange: se => setAlbumInput(se.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: true,\n        placeholder: \"Name Of Artist\",\n        type: \"text\",\n        value: artistNameInput,\n        onChange: se => setArtistNameInput(se.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: true,\n        placeholder: \"Year Released\",\n        type: \"text\",\n        value: yearReleaseInput,\n        onChange: se => setYearReleaseInput(se.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: true,\n        placeholder: \"Album Cover Image\",\n        type: \"text\",\n        value: albumCoverImageInput,\n        onChange: se => setAlbumCoverImageInput(se.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: true,\n        placeholder: \"List Of Songs By Artist\",\n        type: \"text\",\n        value: listSong,\n        onChange: se => setListSong(se.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button-52\",\n        children: \"Add Artist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(AddArtist, \"o8XneklRMciRurCN3EPHpNrn+xE=\");\n_c = AddArtist;\nexport default AddArtist;\nvar _c;\n$RefreshReg$(_c, \"AddArtist\");","map":{"version":3,"names":["type","React","useState","AddArtist","artistData","setArtistData","albumInput","setAlbumInput","artistNameInput","setArtistNameInput","yearReleaseInput","setYearReleaseInput","albumCoverImageInput","setAlbumCoverImageInput","listSong","setListSong","handleSubmit","se","preventDefault","newAlbum","album_name","artist_name","release_year","album_cover","song_cover","fetch","method","headers","body","JSON","stringify","then","res","json","data","target","value"],"sources":["/home/sammyp/Development/code/phase-3-project-front-end/src/components/AddArtist.js"],"sourcesContent":["import { type } from \"@testing-library/user-event/dist/type\"\nimport React, {useState} from \"react\";\n\nfunction AddArtist({artistData, setArtistData}){\n   const [albumInput, setAlbumInput] = useState('')\n   const [artistNameInput, setArtistNameInput] = useState('')\n   const [yearReleaseInput, setYearReleaseInput] = useState('')\n   const [albumCoverImageInput, setAlbumCoverImageInput] = useState('')\n   const [listSong, setListSong] = useState('')\n\n   const handleSubmit = (se) =>{\n      se.preventDefault()\n\n      let newAlbum={\n         album_name: albumInput,\n         artist_name: artistNameInput,\n         release_year: yearReleaseInput,\n         album_cover: albumCoverImageInput,\n         song_cover: listSong\n      }\n   \nfetch('http://localhost:9292/newalbums',{\n   method: 'POST',\n   headers: {'Content-Type': 'application/json'},\n   body:JSON.stringify(newAlbum)\n   })\n   .then(res => res.json())\n   .then(data => setArtistData([...artistData, data]));\n}\n    \n     return (\n        <div>\n         <h2>New Album</h2>\n         <form onSubmit={handleSubmit}>\n            <input class placeholder=\"Name Of Album\" type=\"text\"value={albumInput} onChange={(se)=>setAlbumInput(se.target.value)}/>\n            <input class placeholder=\"Name Of Artist\" type=\"text\"value={artistNameInput} onChange={(se)=>setArtistNameInput(se.target.value)}/>\n            <input class placeholder=\"Year Released\" type=\"text\"value={yearReleaseInput} onChange={(se)=>setYearReleaseInput(se.target.value)}/>\n            <input class placeholder=\"Album Cover Image\" type=\"text\"value={albumCoverImageInput} onChange={(se)=>setAlbumCoverImageInput(se.target.value)}/>\n            <input class placeholder=\"List Of Songs By Artist\" type=\"text\" value={listSong} onChange={(se)=>setListSong(se.target.value)}/>\n            <button type=\"submit\" className=\"button-52\">Add Artist</button>\n         </form>\n        </div>\n     )\n}\n\nexport default AddArtist;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}