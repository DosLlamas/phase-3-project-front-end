{"ast":null,"code":"var _jsxFileName = \"/home/sammyp/Development/code/phase-3-project-front-end/src/components/AddArtist.js\",\n  _s = $RefreshSig$();\nimport { type } from \"@testing-library/user-event/dist/type\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddArtist(_ref) {\n  _s();\n  let {\n    artistData,\n    setArtistData\n  } = _ref;\n  const [albumInput, setAlbumInput] = useState('');\n  const [artistNameInput, setArtistNameInput] = useState('');\n  const [yearReleaseInput, setYearReleaseInput] = useState('');\n  const [albumCoverImageInput, setAlbumCoverImageInput] = useState('');\n  const handleSubmit = se => {\n    se.preventDefault();\n    let newAlbum = {\n      album: albumInput,\n      artist_name: artistNameInput,\n      release_year: yearReleaseInput,\n      album_cover: albumCoverImageInput\n    };\n    fetch('http://localhost:9292/albums', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(newAlbum)\n    }).then(res => res.json()).then(data => setArtistData([...artistData, data]));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"New Album\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Name Of Album\",\n        type: \"text\",\n        value: \"\",\n        onChange: albumInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Name Of Artist\",\n        type: \"text\",\n        value: \"\",\n        onChange: artistNameInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Year Released\",\n        type: \"text\",\n        value: yearReleaseInput,\n        onChange: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Album Cover Image\",\n        type: \"text\",\n        value: albumCoverImageInput,\n        onChange: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-52\",\n      children: \"Add Artist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(AddArtist, \"fD1LA36tMwxWV6ZCq7JUIkBRinI=\");\n_c = AddArtist;\nexport default AddArtist;\nvar _c;\n$RefreshReg$(_c, \"AddArtist\");","map":{"version":3,"names":["type","React","useState","AddArtist","artistData","setArtistData","albumInput","setAlbumInput","artistNameInput","setArtistNameInput","yearReleaseInput","setYearReleaseInput","albumCoverImageInput","setAlbumCoverImageInput","handleSubmit","se","preventDefault","newAlbum","album","artist_name","release_year","album_cover","fetch","method","headers","body","JSON","stringify","then","res","json","data"],"sources":["/home/sammyp/Development/code/phase-3-project-front-end/src/components/AddArtist.js"],"sourcesContent":["import { type } from \"@testing-library/user-event/dist/type\"\nimport React, {useState} from \"react\";\n\nfunction AddArtist({artistData, setArtistData}){\n   const [albumInput, setAlbumInput] = useState('')\n   const [artistNameInput, setArtistNameInput] = useState('')\n   const [yearReleaseInput, setYearReleaseInput] = useState('')\n   const [albumCoverImageInput, setAlbumCoverImageInput] = useState('')\n\n   const handleSubmit = (se) =>{\n      se.preventDefault()\n\n      let newAlbum={\n         album: albumInput,\n         artist_name: artistNameInput,\n         release_year: yearReleaseInput,\n         album_cover: albumCoverImageInput\n      }\n   \nfetch('http://localhost:9292/albums',{\n   method: 'POST',\n   headers: {'content-type': 'application/json'},\n   body:JSON.stringify(newAlbum)\n   })\n   .then(res => res.json())\n   .then(data => setArtistData([...artistData, data]));\n}\n    \n     return (\n        <div>\n         <h2>New Album</h2>\n         <form>\n            <input placeholder=\"Name Of Album\" type=\"text\"value=\"\" onChange={albumInput}/>\n            <input placeholder=\"Name Of Artist\" type=\"text\"value=\"\" onChange={artistNameInput}/>\n            <input placeholder=\"Year Released\" type=\"text\"value={yearReleaseInput} onChange=''/>\n            <input placeholder=\"Album Cover Image\" type=\"text\"value={albumCoverImageInput} onChange=''/>\n         </form>\n         <button className=\"button-52\">Add Artist</button>\n        </div>\n     )\n}\n\nexport default AddArtist;"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,uCAAuC;AAC5D,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC;AAEtC,SAASC,SAAS,OAA6B;EAAA;EAAA,IAA5B;IAACC,UAAU;IAAEC;EAAa,CAAC;EAC3C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACM,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACQ,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACU,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpE,MAAMY,YAAY,GAAIC,EAAE,IAAI;IACzBA,EAAE,CAACC,cAAc,EAAE;IAEnB,IAAIC,QAAQ,GAAC;MACVC,KAAK,EAAEZ,UAAU;MACjBa,WAAW,EAAEX,eAAe;MAC5BY,YAAY,EAAEV,gBAAgB;MAC9BW,WAAW,EAAET;IAChB,CAAC;IAEPU,KAAK,CAAC,8BAA8B,EAAC;MAClCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACV,QAAQ;IAC5B,CAAC,CAAC,CACDW,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI1B,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAE2B,IAAI,CAAC,CAAC,CAAC;EACtD,CAAC;EAEI,oBACG;IAAA,wBACC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,eAClB;MAAA,wBACG;QAAO,WAAW,EAAC,eAAe;QAAC,IAAI,EAAC,MAAM;QAAA,KAAK,EAAC,EAAE;QAAC,QAAQ,EAAEzB;MAAW;QAAA;QAAA;QAAA;MAAA,QAAE,eAC9E;QAAO,WAAW,EAAC,gBAAgB;QAAC,IAAI,EAAC,MAAM;QAAA,KAAK,EAAC,EAAE;QAAC,QAAQ,EAAEE;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAE,eACpF;QAAO,WAAW,EAAC,eAAe;QAAC,IAAI,EAAC,MAAM;QAAA,KAAK,EAAEE,gBAAiB;QAAC,QAAQ,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,eACpF;QAAO,WAAW,EAAC,mBAAmB;QAAC,IAAI,EAAC,MAAM;QAAA,KAAK,EAAEE,oBAAqB;QAAC,QAAQ,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACxF,eACP;MAAQ,SAAS,EAAC,WAAW;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB;EAAA;IAAA;IAAA;IAAA;EAAA,QAC5C;AAEd;AAAC,GArCQT,SAAS;AAAA,KAATA,SAAS;AAuClB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}